@page "/projects"

@using Deployer.Data
@using Deployer.Data.Models
@using Microsoft.EntityFrameworkCore
@inject DeployerContext Context

<h1>Projects</h1>

<div class="d-flex flex-row">
    <input class="p-2" type="text" placeholder="Filter..." @bind="Filter">
    <button class="p-2 btn btn-primary" @onclick="Search"><span class="oi oi-magnifying-glass" aria-hidden="true"></span></button>
</div>

<table class="table">
    <thead>
    <tr>
        <th>Name</th>
        <th>Node</th>
    </tr>
    </thead>

    <tbody>
    @if (projects == null)
    {
        <LoadingSpinner />
    }
    else
    {
        @foreach (var project in projects)
        {
            <tr>
                <td>@project.Name</td>
                @if (project.Node == null)
                {
                    <td><span class="oi oi-warning" aria-hidden="true"></span>Node not found</td>
                }
                else
                {
                    <td><a href="nodes/@project.Node.Id">@project.Node.Name</a></td>
                }
            </tr>
        }
    }
    </tbody>
</table>


@code {
    public string Filter { get; set; }

    private List<Project> projects;

    protected override async Task OnInitializedAsync()
    {
        projects = await Context.Projects
            .Include(i => i.Node)
            .OrderBy(i => i.Name)
            .ToListAsync();
    }

    private async Task Search(MouseEventArgs e)
    {
        projects = null;
        projects = await Context.Projects
            .Include(i => i.Node)
            .Where(i => i.Name.Contains(Filter))
            .OrderBy(i => i.Name)
            .ToListAsync();
    }
}
