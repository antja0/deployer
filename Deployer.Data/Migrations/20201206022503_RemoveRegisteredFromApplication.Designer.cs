// <auto-generated />
using System;
using Deployer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Deployer.Data.Migrations
{
    [DbContext(typeof(DeployerContext))]
    [Migration("20201206022503_RemoveRegisteredFromApplication")]
    partial class RemoveRegisteredFromApplication
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ApplicationVersionProject", b =>
                {
                    b.Property<string>("ProjectsId")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ApplicationVersionsVersion")
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("ApplicationVersionsApplicationId")
                        .HasColumnType("CHAR(36)");

                    b.HasKey("ProjectsId", "ApplicationVersionsVersion", "ApplicationVersionsApplicationId");

                    b.HasIndex("ApplicationVersionsVersion", "ApplicationVersionsApplicationId");

                    b.ToTable("ApplicationVersionProject");
                });

            modelBuilder.Entity("Deployer.Data.Models.Application", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ChangelogPath")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("RepositoryUrl")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ScriptPath")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("VersionEndpoint")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Deployer.Data.Models.ApplicationVersion", b =>
                {
                    b.Property<string>("Version")
                        .HasMaxLength(16)
                        .HasColumnType("CHAR(16)");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UnListed")
                        .HasColumnType("bit");

                    b.HasKey("Version", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationVersions");
                });

            modelBuilder.Entity("Deployer.Data.Models.Node", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ApiEndpoint")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("CHAR(36)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<bool>("Registered")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("Deployer.Data.Models.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("NodeId")
                        .HasColumnType("CHAR(36)");

                    b.HasKey("Id");

                    b.HasIndex("NodeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ApplicationVersionProject", b =>
                {
                    b.HasOne("Deployer.Data.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deployer.Data.Models.ApplicationVersion", null)
                        .WithMany()
                        .HasForeignKey("ApplicationVersionsVersion", "ApplicationVersionsApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deployer.Data.Models.ApplicationVersion", b =>
                {
                    b.HasOne("Deployer.Data.Models.Application", "Application")
                        .WithMany("Versions")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Deployer.Data.Models.Node", b =>
                {
                    b.HasOne("Deployer.Data.Models.Application", null)
                        .WithMany("Nodes")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("Deployer.Data.Models.Project", b =>
                {
                    b.HasOne("Deployer.Data.Models.Node", "Node")
                        .WithMany("Projects")
                        .HasForeignKey("NodeId");

                    b.Navigation("Node");
                });

            modelBuilder.Entity("Deployer.Data.Models.Application", b =>
                {
                    b.Navigation("Nodes");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("Deployer.Data.Models.Node", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
