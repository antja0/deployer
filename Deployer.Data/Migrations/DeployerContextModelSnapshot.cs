// <auto-generated />
using System;
using Deployer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Deployer.Data.Migrations
{
    [DbContext(typeof(DeployerContext))]
    partial class DeployerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Deployer.Data.Models.Application", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ChangelogPath")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("RepositoryUrl")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ScriptPath")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("VersionEndpoint")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Deployer.Data.Models.DeploymentGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<bool>("UpdateAutomatically")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DeploymentGroups");
                });

            modelBuilder.Entity("Deployer.Data.Models.DeploymentRule", b =>
                {
                    b.Property<string>("EventId")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("DeploymentGroupId")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<bool>("DeployAutomatically")
                        .HasColumnType("bit");

                    b.HasKey("EventId", "DeploymentGroupId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("DeploymentGroupId");

                    b.ToTable("DeploymentRules");
                });

            modelBuilder.Entity("Deployer.Data.Models.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<string>("EventId")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR(64)");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique()
                        .HasFilter("[EventId] IS NOT NULL");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Deployer.Data.Models.Node", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ApiEndpoint")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("CHAR(36)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR(1024)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<bool>("Registered")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("Deployer.Data.Models.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR(512)");

                    b.Property<string>("NodeId")
                        .HasColumnType("CHAR(36)");

                    b.HasKey("Id");

                    b.HasIndex("NodeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Deployer.Data.Models.Version", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventId")
                        .HasMaxLength(36)
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Name")
                        .HasMaxLength(16)
                        .HasColumnType("CHAR(16)");

                    b.Property<bool>("UnListed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("EventId");

                    b.HasIndex("Name", "ApplicationId", "EventId")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL AND [ApplicationId] IS NOT NULL AND [EventId] IS NOT NULL");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("DeploymentGroupNode", b =>
                {
                    b.Property<string>("DeploymentGroupsId")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("NodesId")
                        .HasColumnType("CHAR(36)");

                    b.HasKey("DeploymentGroupsId", "NodesId");

                    b.HasIndex("NodesId");

                    b.ToTable("DeploymentGroupNode");
                });

            modelBuilder.Entity("DeploymentGroupProject", b =>
                {
                    b.Property<string>("DeploymentGroupsId")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("ProjectsId")
                        .HasColumnType("CHAR(36)");

                    b.HasKey("DeploymentGroupsId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("DeploymentGroupProject");
                });

            modelBuilder.Entity("ProjectVersion", b =>
                {
                    b.Property<string>("ProjectsId")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("VersionsId")
                        .HasColumnType("CHAR(36)");

                    b.HasKey("ProjectsId", "VersionsId");

                    b.HasIndex("VersionsId");

                    b.ToTable("ProjectVersion");
                });

            modelBuilder.Entity("Deployer.Data.Models.DeploymentRule", b =>
                {
                    b.HasOne("Deployer.Data.Models.Application", "Application")
                        .WithMany("DeploymentRules")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deployer.Data.Models.DeploymentGroup", "DeploymentGroup")
                        .WithMany("DeploymentRules")
                        .HasForeignKey("DeploymentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deployer.Data.Models.Event", "Event")
                        .WithMany("DeploymentRules")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("DeploymentGroup");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Deployer.Data.Models.Node", b =>
                {
                    b.HasOne("Deployer.Data.Models.Application", null)
                        .WithMany("Nodes")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("Deployer.Data.Models.Project", b =>
                {
                    b.HasOne("Deployer.Data.Models.Node", "Node")
                        .WithMany("Projects")
                        .HasForeignKey("NodeId");

                    b.Navigation("Node");
                });

            modelBuilder.Entity("Deployer.Data.Models.Version", b =>
                {
                    b.HasOne("Deployer.Data.Models.Application", "Application")
                        .WithMany("Versions")
                        .HasForeignKey("ApplicationId");

                    b.HasOne("Deployer.Data.Models.Event", "Event")
                        .WithMany("Versions")
                        .HasForeignKey("EventId");

                    b.Navigation("Application");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DeploymentGroupNode", b =>
                {
                    b.HasOne("Deployer.Data.Models.DeploymentGroup", null)
                        .WithMany()
                        .HasForeignKey("DeploymentGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deployer.Data.Models.Node", null)
                        .WithMany()
                        .HasForeignKey("NodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeploymentGroupProject", b =>
                {
                    b.HasOne("Deployer.Data.Models.DeploymentGroup", null)
                        .WithMany()
                        .HasForeignKey("DeploymentGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deployer.Data.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectVersion", b =>
                {
                    b.HasOne("Deployer.Data.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Deployer.Data.Models.Version", null)
                        .WithMany()
                        .HasForeignKey("VersionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Deployer.Data.Models.Application", b =>
                {
                    b.Navigation("DeploymentRules");

                    b.Navigation("Nodes");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("Deployer.Data.Models.DeploymentGroup", b =>
                {
                    b.Navigation("DeploymentRules");
                });

            modelBuilder.Entity("Deployer.Data.Models.Event", b =>
                {
                    b.Navigation("DeploymentRules");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("Deployer.Data.Models.Node", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
